{"version":3,"sources":["components/PizzaStock.jpg","components/Home.js","components/OrderComplete.js","components/Form.js","validation/FormSchema.js","App.js","index.js"],"names":["module","exports","StyledHome","Styled","div","Home","className","id","src","PizzaStock","alt","OrderComplete","details","name","size","sauces","toppings","length","map","like","idx","key","instructions","Form","props","values","post","inputChange","checkboxChange","errors","disabled","users","console","log","onInputChange","evt","target","value","onCheckboxChange","checked","onSubmit","preventDefault","onChange","type","pepperoni","clams","pineapple","veggies","user","formSchema","yup","shape","min","required","oneOf","initialFormValues","Pepperoni","Clams","Pineapple","Veggies","initialFormErrors","initialForm","App","useState","setUsers","formValues","setFormValues","formErrors","setFormErrors","setDisabled","postUser","newPizza","axios","then","res","data","catch","err","useEffect","isValid","valid","to","exact","path","validate","isChecked","submit","trim","Object","keys","filter","tp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad657438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PizzaStock.c66f6ea9.jpg\";","import React from 'react'\nimport PizzaStock from './PizzaStock.jpg'\nimport Styled from 'styled-components'\n\nconst StyledHome = Styled.div`\n    text-align:center;\n    margin: 10% 10%;\n    padding: 0% 5%;\n\n\n    #image{\n        width:100%;\n    }\n`\n\nconst Home = () => {\n\n    return (\n    <StyledHome>\n    <div className='home-container'>\n        <div className='body'>\n            <p>All of Lambdaâ€™s pizzas are prepared on a New York style crust with a slightly thicker edge & cooked golden brown. Completely customize your pizza using our Pizza Builder Tool. Start building your own pizza today!</p>\n   \n            <img id='image' className='home-image' src={PizzaStock} alt='stock za img'/>\n      </div>\n    </div>\n    </StyledHome>\n    );\n};\nexport default Home","import React from \"react\";\n\nexport default function OrderComplete({details}) {\n  if(!details) {\n  return <h3>Making Pizza...</h3> }\n  \n    return (\n      <div>  \n        <br></br>\n        <div>Customer Name: {details.name}</div>\n        <div>Size: {details.size}</div>\n        <div>Sauce: {details.sauces}</div>\n\n        {\n          !!details.toppings && !!details.toppings.length &&\n          <div>\n            Toppings:\n            <ul>\n                {details.toppings.map((like, idx) => \n                <li key={idx}>{like}</li>)}\n              </ul>\n          </div>\n        }\n    \n        <div>Special Instructions:{details.instructions}</div>\n      </div>\n    )\n  }\n","import React from 'react'\nimport OrderComplete from './OrderComplete'\n\nconst Form = (props) => {\n\n    const {\n        values,\n        post,\n        inputChange,\n        checkboxChange,\n        errors,\n        disabled,\n        users\n    } = props\n    \n    console.log('WHAT THE PROPS')\n    console.log(props)\n\n    const onInputChange = evt => {\n        const { name, value } = evt.target\n        inputChange(name, value)\n      }\n\n    const onSubmit = evt => {\n        evt.preventDefault()\n        post()\n      }\n\n    const onCheckboxChange = evt => {\n        const { name, checked } = evt.target\n        checkboxChange(name, checked)\n      }\n\n    return (\n        <form className='form container' onSubmit={onSubmit}>\n            <div id='formheader'>\n            <h2>Start cookin...</h2>\n\n            <div>\n                <p>Please complete this form to continue. All pizzas come with fresh mozzerella cheese.</p>\n            </div>\n\n            <div className='register-form inputs'>\n                <div id='inputBoxes'className='input-box'>\n                <label>Name:&nbsp;\n                    <input\n                        value={values.name}\n                        onChange={onInputChange}\n                        name='name'\n                        type='text'\n                    />\n                </label>\n                <p id='user-error'>{errors.name}</p>\n                </div>\n                <div id='dropBoxes'className='inputDrop-box'></div>\n                <label>Size:&nbsp;\n                    <select id='size-dropdown'\n                        onChange={onInputChange}\n                        value={values.size}\n                        name='size'\n                    >\n                        <option value=''>-Pick a size-</option>\n                        <option value='personal'>Personal</option>\n                        <option value='medium'>Medium</option>\n                        <option value='large'>Large</option>\n                        <option value='mondo'>Mondo</option>\n                    </select>\n                </label>\n                <p id='size-error'>{errors.size}</p>\n                \n                <div id='dropBoxes'className='inputDrop-box'></div>\n                <label>Choice of Sauce:&nbsp;\n                    <select id='sauces-dropdown'\n                        onChange={onInputChange}\n                        value={values.sauces}\n                        name='sauces'\n                    >\n                        <option value=''>- Select a sauce-</option>\n                        <option value='marinara'>Marinara</option>\n                        <option value='pesto'>Pesto</option>\n                        <option value='clam'>Clam</option>\n                        <option value='white garlic'>White Garlic</option>\n                    </select>\n                </label>\n                <p id='sauces-error'>{errors.sauces}</p>\n                </div>\n\n                <div id='checkBoxes'className='inputCheck-box'></div>\n                <label>Choose a Topping:&nbsp;\n                <label>Pepperoni\n                    <input\n                        type=\"checkbox\"\n                        name='pepperoni'\n                        checked={values.toppings.pepperoni === true}\n                        onChange={onCheckboxChange}\n                    />\n                    </label>\n\n                    <label>Clams\n                    <input\n                        type=\"checkbox\"\n                        name='clams'\n                        checked={values.toppings.clams === true}\n                        onChange={onCheckboxChange}\n                    />\n                    </label>\n\n                    <label>Pineapple\n                    <input\n                        type=\"checkbox\"\n                        name='pineapple'\n                        checked={values.toppings.pineapple === true}\n                        onChange={onCheckboxChange}\n                    />\n                    </label>\n\n                    <label>Veggies\n                    <input\n                        type=\"checkbox\"\n                        name='veggies'\n                        checked={values.toppings.veggies === true}\n                        onChange={onCheckboxChange}\n                    />\n                    </label>\n                </label>\n                </div>\n                <br></br>\n                <div id='inputBoxes'className='input-box'>\n                <label>Special Instructions:&nbsp;\n                    <input\n                        value={values.instructions}\n                        onChange={onInputChange}\n                        name='instructions'\n                        type='text'\n                    />\n                </label>\n                <p id='instructions-error'>{errors.instructions}</p>\n                </div>\n\n                <div>\n                    <br></br>\n                    <button id=\"submitBtn\" disabled={disabled}>Place Order</button>\n                </div>\n\n                {\n                    users.map(user => {\n                        return <OrderComplete key={user.name} details={user} />\n                    })\n                } \n        </form>\n    );\n};\nexport default Form","import * as yup from 'yup'\n\nconst formSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(2, \"Who is ordering?\")\n        .required(\"Name is required\"),\n    size: yup\n        .string()\n        .oneOf(['personal', 'medium', 'large', 'mondo'], \"Size is required\"),\n    sauces: yup\n        .string()\n        .oneOf(['marinara', 'pesto', 'clam', 'white garlic'], \"Sauce is required\"),\n    instructions: yup\n        .string()\n        .min(3, \"Special Instructions\")\n        .required(\"Please write N/A if there are no special instructions needed\")\n})\n\nexport default formSchema\n","import React, {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport { Route, Link} from 'react-router-dom';\nimport * as yup from 'yup'\nimport Home from './components/Home'\nimport Form from './components/Form'\nimport OrderComplete from './components/OrderComplete'\nimport formSchema from './validation/FormSchema'\nimport Styled from 'styled-components'\n\nconst StyledHome = Styled.div`\n    text-align:center;\n    margin: 5% 15%;\n    padding: 5% 10%;\n    background-color:black;\n    color: white;\n    padding: 5% 1%;\n    border: 12px solid red;\n\n    h1 {\n        font-size: 4em;\n        color: red;\n        font-family:times;\n    }\n\n`\nconst initialFormValues = {\n  name: '',// input text field\n  size:'',\n  sauces: '', // dropdown\n  toppings: {\n    Pepperoni: false,\n    Clams: false,\n    Pineapple: false,\n    Veggies: false\n  }, // checkboxes\n  instructions: '', // input text field\n}\n\nconst initialFormErrors = {\n  name:'',// input text field\n  size:'',\n  sauces: '', // dropdown\n  toppings: '', \n  instructions: '', // input text field\n}\n\nconst initialForm = []\nconst initialDisabled = true\n\nconst App = () => {\n\n  const [users, setUsers] = useState(initialForm)\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\n  const [disabled, setDisabled] = useState(initialDisabled) \n\n  const postUser = (users) => {\n    const newPizza = {\n      name: formValues.name,\n      size:formValues.size,\n      sauces: formValues.sauces,\n      toppings: formValues.toppings,\n      instructions: formValues.instructions,\n    }\n\n    axios.post('https://reqres.in/api/users', newPizza)\n    .then(res => {\n      console.log(res.data);\n      setUsers([res.data])\n      setFormValues(initialFormValues)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  const inputChange = (name, value) => {\n    yup\n      .reach(formSchema, name)\n\n      .validate(value)\n\n      .then(valid => {\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\",\n        })\n      })\n      .catch(err => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0],\n        })\n      })\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n\n\n  const checkboxChange = (name, isChecked) => {\n\n    setFormValues({\n      ...formValues,\n      toppings: {\n        ...formValues.toppings,\n        [name]: isChecked, // not an array\n      }\n    })\n  }\n\n  const submit = () => {\n    const newUser = {\n      name: formValues.name.trim(), // input text field\n      size:formValues.size.trim(),\n      sauces: formValues.sauces.trim(),// dropdown\n      toppings: Object.keys(formValues.toppings).filter(tp =>\n        formValues.toppings[tp]), // checkboxes\n      instructions: formValues.sauces.trim(), // input text field\n    }\n    postUser(newUser)\n  }\n\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid =>{\n      setDisabled(!valid)\n    })\n  }, [formValues])\n\n  return (\n    <StyledHome className='App'>\n      <nav>\n        <div>\n          <h1 className='store-header'>Lambda Eats</h1>\n        </div>\n        <div className='nav-links'>\n          <Link to='/pizza'>Build Your Own Pizza!</Link>\n        </div>\n      </nav>\n\n    <Route exact path='/'>\n        <Home />\n      </Route>\n\n    <Route path='/pizza'>\n      <Form \n        values={formValues}\n        inputChange={inputChange}\n        checkboxChange={checkboxChange}\n        submit={submit}\n        disabled={disabled}\n        errors={formErrors}\n        post={postUser}\n        users={users}\n        />\n      </Route>\n\n      <Route path=\"/order\">\n        <OrderComplete users={users}/>\n      </Route>\n\n  </StyledHome>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n<Router><App /></Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}